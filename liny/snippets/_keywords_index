(#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data
               ("eltempl"
                (nil nil)
                "emacs-lisp-mode#autoload"
                (("top")
                 nil)
                "emacs-lisp-mode#closure"
                (nil nil)
                "emacs-lisp-mode#cond"
                (nil nil)
                "emacs-lisp-mode#condition-case"
                (nil
                 ("notop"))
                "emacs-lisp-mode#defun"
                (("top")
                 nil)
                "emacs-lisp-mode#hash-table"
                (nil nil)
                "emacs-lisp-mode#let"
                (nil
                 ("notop"))
                "emacs-lisp-mode#ol"
                (nil
                 ("top"))
                "emacs-lisp-mode#test"
                (nil
                 ("top"))
                "emacs-lisp-mode#upcase"
                (nil nil)
                "head"
                (("head")
                 ("top"))
                "let"
                (nil nil)
                "org-mode#head"
                (("head")
                 ("top"))
                "remove-overlays"
                (nil nil)
                "save-excursion"
                (nil nil)
                "snippets=file"
                (nil nil)
                "t"
                (("top" "tail" "head")
                 ("top" "tail" "notop" "head"))))
   #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data
                 ("eltempl"
                  ("eltempl")
                  "et"
                  ("eltempl")
                  "al"
                  ("emacs-lisp-mode#autoload")
                  "autoload"
                  ("emacs-lisp-mode#autoload")
                  "cl"
                  ("emacs-lisp-mode#closure")
                  "closure"
                  ("emacs-lisp-mode#closure")
                  "cd"
                  ("emacs-lisp-mode#cond")
                  "cn"
                  ("emacs-lisp-mode#cond")
                  "co"
                  ("emacs-lisp-mode#cond" "emacs-lisp-mode#condition-case")
                  "cond"
                  ("emacs-lisp-mode#cond")
                  "case"
                  ("emacs-lisp-mode#condition-case")
                  "cc"
                  ("emacs-lisp-mode#condition-case")
                  "condcase"
                  ("emacs-lisp-mode#condition-case")
                  "def"
                  ("emacs-lisp-mode#defun")
                  "defun"
                  ("emacs-lisp-mode#defun")
                  "f"
                  ("emacs-lisp-mode#defun")
                  "hash"
                  ("emacs-lisp-mode#hash-table")
                  "ht"
                  ("emacs-lisp-mode#hash-table")
                  "le"
                  ("emacs-lisp-mode#let")
                  "lt"
                  ("emacs-lisp-mode#let" "let")
                  "ol"
                  ("emacs-lisp-mode#ol" "remove-overlays")
                  "test"
                  ("emacs-lisp-mode#test")
                  "uc"
                  ("emacs-lisp-mode#upcase")
                  "upcase"
                  ("emacs-lisp-mode#upcase")
                  "h"
                  ("head" "org-mode#head")
                  "let"
                  ("let")
                  "ro"
                  ("remove-overlays")
                  "se"
                  ("save-excursion")
                  "snip"
                  ("snippets=file")
                  "t"
                  ("t")))
   #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data
                 ("emacs-lisp-mode"
                  ("eltempl" "emacs-lisp-mode#closure" "emacs-lisp-mode#cond" "emacs-lisp-mode#defun" "emacs-lisp-mode#hash-table" "emacs-lisp-mode#let" "emacs-lisp-mode#ol" "emacs-lisp-mode#test" "let")
                  "all"
                  ("emacs-lisp-mode#autoload" "emacs-lisp-mode#condition-case" "emacs-lisp-mode#ol" "emacs-lisp-mode#test" "emacs-lisp-mode#upcase" "head" "remove-overlays" "save-excursion" "snippets=file" "t")
                  "lisp-interaction-mode"
                  ("emacs-lisp-mode#closure" "emacs-lisp-mode#cond" "emacs-lisp-mode#defun" "emacs-lisp-mode#hash-table" "emacs-lisp-mode#let" "emacs-lisp-mode#ol" "emacs-lisp-mode#test" "let")
                  "lisp-mode"
                  ("emacs-lisp-mode#closure" "emacs-lisp-mode#cond" "emacs-lisp-mode#defun" "emacs-lisp-mode#hash-table" "emacs-lisp-mode#let" "emacs-lisp-mode#ol" "emacs-lisp-mode#test" "let")
                  "org-mode"
                  ("org-mode#head"))))
